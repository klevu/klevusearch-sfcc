<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="http://www.demandware.com/xml/impex/library/2006-10-31" library-id="RefArchSharedLibrary">
    <content content-id="klevu-analytics-snippet">
        <display-name xml:lang="x-default">Storefront Analytics Snippet</display-name>
        <online-flag>true</online-flag>
        <searchable-flag>false</searchable-flag>
        <page-attributes/>
        <custom-attributes>
            <custom-attribute attribute-id="body" xml:lang="x-default">&lt;script&gt;&#13;
function klevuGetPageData(){&#13;
		//init the page meta&#13;
		var klevu_pagemeta = {};&#13;
		//try to get the page data&#13;
		if(klevu.dom.find("script[type='application/ld+json']").length == 0) {&#13;
			//not a content page , check for cart page&#13;
			if(klevu.dom.getFirst(".page").dataset.hasOwnProperty("action") &amp;&amp; klevu.dom.getFirst(".page").dataset.action == "Cart-Show"){&#13;
				var productList = [];&#13;
				klevu_pagemeta.pageType = "cart";&#13;
				//check if there are any products in the cart&#13;
				if(klevu.dom.find("button.remove-btn-lg.remove-product").length == 0){&#13;
					klevu_pagemeta.cartRecords = []&#13;
				} else {&#13;
					klevu.each(klevu.dom.find("button.remove-btn-lg.remove-product"),function (key, elem) {&#13;
					  productList.push(elem.dataset.pid);&#13;
					});&#13;
					productList = productList.filter(function onlyUnique(value, index, self) {&#13;
									  return self.indexOf(value) === index;&#13;
									});&#13;
					klevu_pagemeta.pageType = "cart"&#13;
					klevu_pagemeta.cartRecords = [];&#13;
					//add product list to the metadata&#13;
					klevu.each(productList,function (key, elem) {&#13;
					  klevu_pagemeta.cartRecords.push({&#13;
						"itemGroupId" : elem&#13;
					  });&#13;
					});&#13;
				}&#13;
			} else {&#13;
				return false;&#13;
			}&#13;
		} else {&#13;
			//use the defined page meta object to see what type of content page it is&#13;
			var pageData = JSON.parse(klevu.dom.getFirst("script[type='application/ld+json']").innerHTML);&#13;
			&#13;
			switch(pageData["@type"]) {&#13;
			  case "ItemList":&#13;
			  // item lists are all pages that display products, they can be catery or search&#13;
			   if(klevu.dom.find(".category-id").length == 0){&#13;
				   klevu_pagemeta.pageType = "search";&#13;
				   klevu_pagemeta.searchTerm = klevu.dom.getFirst(".search-keywords").innerText;&#13;
				   klevu_pagemeta.totalRecords = 0;&#13;
				   klevu_pagemeta.searchRecords = [];&#13;
				   klevu_pagemeta.searchRecordsIds = [];&#13;
				   klevu_pagemeta.typeOfQuery = "unknown";&#13;
				   //find and extract all products from the dom&#13;
					if(klevu.dom.find(".product").length &gt;0){&#13;
						var productList = [];&#13;
						var productListIds = [];&#13;
						klevu.each(klevu.dom.find(".product"),function (key, elem) {&#13;
						  productList.push({&#13;
							itemGroupId: elem.dataset.pid&#13;
						  });&#13;
						  productListIds.push(elem.dataset.pid);&#13;
						});&#13;
						//add product list to the metadata&#13;
						klevu_pagemeta.searchRecords = productList;&#13;
						klevu_pagemeta.searchRecordsIds = productListIds;&#13;
						klevu_pagemeta.totalRecords = klevu.dom.getFirst(".search-result-count").innerText.replace(/(?:\r\n|\r|\n)/g, '').replace( /(^.+)(\w\d+\w)(.+$)/i,'$2').replace(/(^\d+)(.+$)/i,'$1');&#13;
					}&#13;
				  &#13;
			   } else {&#13;
					//populate data for the category object&#13;
				   klevu_pagemeta.pageType = "category";&#13;
				   klevu_pagemeta.categoryUrl = window.location.protocol + "//" + window.location.host + window.location.pathname;&#13;
				   klevu_pagemeta.categoryName = klevu.dom.getFirst(".category-id").value;&#13;
				   klevu_pagemeta.totalRecords = 0;&#13;
				   klevu_pagemeta.categoryProducts = [];&#13;
				   klevu_pagemeta.categoryProductsIds = [];&#13;
					if(klevu.dom.find(".product").length &gt;0){&#13;
						var productList = [];&#13;
						var productListIds = [];&#13;
						klevu.each(klevu.dom.find(".product"),function (key, elem) {&#13;
						  productList.push({&#13;
							itemGroupId: elem.dataset.pid&#13;
						  });&#13;
						  productListIds.push(elem.dataset.pid);&#13;
						});&#13;
						//add product list to the metadata&#13;
						klevu_pagemeta.categoryProducts = productList;&#13;
						klevu_pagemeta.categoryProductsIds = productListIds;&#13;
						klevu_pagemeta.totalRecords = klevu.dom.getFirst(".result-count").innerText.replace(/(?:\r\n|\r|\n)/g, '').replace( /(^.+)(\w\d+\w)(.+$)/i,'$2').replace(/(^\d+)(.+$)/i,'$1');&#13;
					}&#13;
				   &#13;
			   }&#13;
				&#13;
				break;&#13;
			  case "Product":&#13;
				//extract data from the page for product information , as the item group and id is same we use the main product id for the 2 values&#13;
				 klevu_pagemeta.pageType = "pdp";&#13;
				 klevu_pagemeta.itemGroupId = pageData.mpn;&#13;
				 klevu_pagemeta.itemId =  pageData.mpn;&#13;
				 klevu_pagemeta.itemName = encodeURIComponent(pageData.name);&#13;
				 klevu_pagemeta.itemUrl = window.location.protocol + "//" + window.location.host + window.location.pathname;&#13;
				 klevu_pagemeta.itemSku = pageData.sku;&#13;
				 klevu_pagemeta.itemSalePrice = pageData.offers.price;&#13;
				break;&#13;
			  default:&#13;
				klevu_pagemeta.pageType = "";&#13;
				// code block&#13;
				break;&#13;
			}&#13;
		}&#13;
		window.klevu_page_meta = klevu_pagemeta;&#13;
		return true;&#13;
	}&#13;
&#13;
function klevuSendCategoryData(){&#13;
	&#13;
	 &#13;
	//init storage , it will be used to track the last category data to be used to validate the reference on product page&#13;
	var category = klevu.dictionary("category");&#13;
	category.setStorage("local");&#13;
	category.mergeFromGlobal();&#13;
	category.addElement("klevu_categoryName",  klevu_page_meta.categoryName);&#13;
	category.addElement("klevu_categoryUrl", klevu_page_meta.categoryUrl);&#13;
	category.addElement("klevu_pageType", klevu_page_meta.pageType);&#13;
	category.addElement("klevu_categoryProducts", klevu_page_meta.categoryProductsIds);&#13;
	category.mergeToGlobal();&#13;
	// build the category track object&#13;
	var klevuCategoryOptions = {&#13;
	   klevu_categoryName: klevu_page_meta.categoryName,&#13;
	   klevu_categoryPath: klevu_page_meta.categoryName,&#13;
	   klevu_productIds: klevu_page_meta.categoryProductsIds.join(",")&#13;
	 };&#13;
	&#13;
	//send it to the klevu analitics server&#13;
	klevu.analyticsUtilSFCC.base.sendCatViewAnalyticsRequest(klevuCategoryOptions);&#13;
  }&#13;
&#13;
function klevuSendSearchData(){&#13;
	&#13;
	 &#13;
	//init storage , it will be used to track the last search data to be used to validate the reference on product page&#13;
	var category = klevu.dictionary("category");&#13;
	category.setStorage("local");&#13;
	category.mergeFromGlobal();&#13;
	category.addElement("klevu_categoryName",  klevu_page_meta.searchTerm);&#13;
	category.addElement("klevu_categoryUrl", window.location.protocol + "//" + window.location.host + window.location.pathname);&#13;
	category.addElement("klevu_categoryProducts", klevu_page_meta.searchRecordsIds);&#13;
	category.addElement("klevu_pageType", klevu_page_meta.pageType);&#13;
	category.mergeToGlobal();&#13;
	 	 &#13;
	 // build the search track object&#13;
	var klevuSearchOptions = {&#13;
	   klevu_term: klevu_page_meta.searchTerm,&#13;
	   klevu_totalResults: klevu_page_meta.totalRecords,&#13;
	   klevu_typeOfQuery: klevu_page_meta.typeOfQuery&#13;
	   &#13;
	 };&#13;
	//send it to the klevu analitics server&#13;
	klevu.analyticsUtilSFCC.base.sendSearchViewAnalyticsRequest(klevuSearchOptions);&#13;
  }&#13;
&#13;
function klevuSendProductData(){&#13;
    //retrive last ccategory/search from storage&#13;
    var category = klevu.dictionary("category");&#13;
    category.setStorage("local");&#13;
    category.mergeFromGlobal();&#13;
	//check if there was a last category/search as a reference&#13;
    if(category.getElement("klevu_categoryName") != "klevu_categoryName" || category.getElement("klevu_categoryUrl") != "klevu_categoryUrl" || category.getElement("klevu_pageType")!= "klevu_pageType" ){&#13;
      if(document.referrer &amp;&amp; document.referrer.indexOf(category.getElement("klevu_categoryUrl")) != -1){&#13;
		//track if last visit was a category&#13;
		if(category.getElement("klevu_pageType") == "category"){&#13;
			//build the category item click object&#13;
			var klevuProduct = {&#13;
				klevu_categoryName:"",&#13;
				klevu_categoryPath:"",&#13;
				klevu_productId:klevu_page_meta.itemId,&#13;
				klevu_productName: klevu_page_meta.itemName,&#13;
				klevu_productUrl:klevu_page_meta.itemUrl,&#13;
				klevu_productSku:klevu_page_meta.itemSku,&#13;
				klevu_salePrice: klevu_page_meta.itemSalePrice,&#13;
				send: false&#13;
				&#13;
			};&#13;
			klevuProduct.klevu_categoryName = category.getElement("klevu_categoryName");&#13;
			 klevuProduct.klevu_categoryPath = category.getElement("klevu_categoryName");&#13;
			 var products = category.getElement("klevu_categoryProducts").split(",");&#13;
			 //validate that the product was part of the visited category&#13;
			 if(typeof products == "object" &amp;&amp; products.indexOf(klevu_page_meta.itemId) != -1 ){&#13;
				klevuProduct.klevu_productPosition = products.indexOf(klevu_page_meta.itemId);&#13;
				klevuProduct.send = true;&#13;
			 }&#13;
			 //send the product click&#13;
			 if(klevuProduct.send){&#13;
			  delete klevuProduct.send;&#13;
			  klevu.analyticsUtilSFCC.base.sendCategoryProductClickTrackingAnalyticsRequest(klevuProduct);&#13;
			}&#13;
		} else if(category.getElement("klevu_pageType") == "search"){&#13;
			//build the search item click object&#13;
			var klevuProduct = {&#13;
				klevu_keywords:"",&#13;
				klevu_type:"clicked",&#13;
				klevu_productId:klevu_page_meta.itemId,&#13;
				klevu_productName: klevu_page_meta.itemName,&#13;
				klevu_productUrl:klevu_page_meta.itemUrl,&#13;
				send: false&#13;
				&#13;
			};&#13;
			 klevuProduct.klevu_keywords = category.getElement("klevu_categoryName");&#13;
			 var products = category.getElement("klevu_categoryProducts").split(",");&#13;
			 //validate that the product was part of the visited search results page&#13;
			 if(typeof products == "object" &amp;&amp; products.indexOf(klevu_page_meta.itemId) != -1 ){&#13;
				klevuProduct.klevu_productPosition = products.indexOf(klevu_page_meta.itemId);&#13;
				klevuProduct.send = true;&#13;
			 }&#13;
			  //send the product click&#13;
			 if(klevuProduct.send){&#13;
			  delete klevuProduct.send;&#13;
			  klevu.analyticsUtilSFCC.base.sendSearchProductClickTrackingAnalyticsRequest(klevuProduct);&#13;
			}&#13;
		}&#13;
  	  }&#13;
    }&#13;
    &#13;
    &#13;
  }&#13;
&#13;
function klevuSFCCInit(){&#13;
      //extend klevu to include sfcc analitics&#13;
      klevu.extend({&#13;
          analyticsUtilSFCC: {&#13;
              base: {&#13;
&#13;
                  /**&#13;
                   * Function to get cat view term option object&#13;
                   * @param {*} dataObj &#13;
                   */&#13;
                  getCategoryViewOptions: function (dataObj) {&#13;
                      var analyticsCategoryOptions = {&#13;
                          klevu_categoryName: "unknown",&#13;
                          klevu_src: "unknown",&#13;
                          klevu_categoryPath: "unknown",&#13;
                          klevu_productIds: "unknown",&#13;
                          klevu_pageStartsFrom: "unknown"&#13;
                      };&#13;
&#13;
                      if (!dataObj) {&#13;
                          return analyticsCategoryOptions;&#13;
                      }&#13;
&#13;
                      if (dataObj.categoryName) {&#13;
                          analyticsCategoryOptions.klevu_categoryName = dataObj.categoryName;&#13;
                      }&#13;
&#13;
                      if (dataObj.categoryPath) {&#13;
                          analyticsCategoryOptions.klevu_categoryPath = dataObj.categoryPath;&#13;
                      }&#13;
&#13;
                      if (dataObj.productIds) {&#13;
                          analyticsCategoryOptions.klevu_productIds = dataObj.productIds;&#13;
                      }&#13;
&#13;
                      if (dataObj.src) {&#13;
                          analyticsCategoryOptions.klevu_src = dataObj.src;&#13;
                      }&#13;
&#13;
                      if (dataObj.pageStartsFrom) {&#13;
                          analyticsCategoryOptions.klevu_pageStartsFrom = dataObj.pageStartsFrom;&#13;
                      }&#13;
&#13;
                      return analyticsCategoryOptions;&#13;
                  },&#13;
&#13;
                  /**&#13;
                   * Function to send cat view analytics request&#13;
                   * @param {*} termOptions &#13;
                   */&#13;
                  sendCatViewAnalyticsRequest: function (termOptions) {&#13;
                      if (!termOptions) {&#13;
                          termOptions = this.getCategoryViewOptions({&#13;
                              categoryName: "",&#13;
                              src: "",&#13;
                              categoryPath: "",&#13;
                              productIds: "",&#13;
                              pageStartsFrom: ""&#13;
                          });&#13;
                      }&#13;
                      klevu.analyticsEvents.catview(termOptions);&#13;
                  },&#13;
&#13;
                  /**&#13;
                   * Function to get cat product tracking click object&#13;
                   * @param {*} dataObj &#13;
                   */&#13;
                  getCategoryProductClickTrackingOption: function (dataObj) {&#13;
                      var analyticsCategoryClickOptions = {&#13;
                          klevu_categoryName: "unknown",&#13;
                          klevu_src: "unknown",&#13;
                          klevu_categoryPath: "unknown",&#13;
                          klevu_productId: "unknown",&#13;
                          klevu_productName: "unknown",&#13;
                          klevu_productUrl: "unknown",&#13;
                          klevu_productSku: "unknown",&#13;
                          klevu_salePrice: "unknown",&#13;
                          klevu_productRatings: "unknown",&#13;
                          klevu_productPosition: "unknown"&#13;
                      };&#13;
&#13;
                      if (!dataObj) {&#13;
                          return analyticsCategoryClickOptions;&#13;
                      }&#13;
&#13;
                      if (dataObj.categoryName) {&#13;
                          analyticsCategoryClickOptions.klevu_categoryName = dataObj.categoryName;&#13;
                      }&#13;
&#13;
                      if (dataObj.categoryPath) {&#13;
                          analyticsCategoryClickOptions.klevu_categoryPath = dataObj.categoryPath;&#13;
                      }&#13;
&#13;
                      if (dataObj.productId) {&#13;
                          analyticsCategoryClickOptions.klevu_productId = dataObj.productId;&#13;
                      }&#13;
&#13;
                      if (dataObj.productName) {&#13;
                          analyticsCategoryClickOptions.klevu_productName = dataObj.productName;&#13;
                      }&#13;
&#13;
                      if (dataObj.productSku) {&#13;
                          analyticsCategoryClickOptions.klevu_productSku = dataObj.productSku;&#13;
                      }&#13;
&#13;
                      if (dataObj.salePrice) {&#13;
                          analyticsCategoryClickOptions.klevu_salePrice = dataObj.salePrice;&#13;
                      }&#13;
&#13;
                      if (dataObj.productRatings) {&#13;
                          analyticsCategoryClickOptions.klevu_productRatings = dataObj.productRatings;&#13;
                      }&#13;
&#13;
                      if (dataObj.productPosition) {&#13;
                          analyticsCategoryClickOptions.klevu_productPosition = dataObj.productPosition;&#13;
                      }&#13;
&#13;
                      if (dataObj.src) {&#13;
                          analyticsCategoryClickOptions.klevu_src = dataObj.src;&#13;
                      }&#13;
&#13;
                      return analyticsCategoryClickOptions;&#13;
                  },&#13;
&#13;
                  /**&#13;
                   * Function to send cat product click tracking analytics request&#13;
                   * @param {*} termOptions &#13;
                   */&#13;
                  sendCategoryProductClickTrackingAnalyticsRequest: function (termOptions) {&#13;
                      if (!termOptions) {&#13;
                          termOptions = this.getCategoryProductClickTrackingOption({&#13;
                              categoryName: "",&#13;
                              src: "",&#13;
                              categoryPath: "",&#13;
                              productId: "",&#13;
                              productName: "",&#13;
                              productUrl: "",&#13;
                              productSku: "",&#13;
                              salePrice: "",&#13;
                              productRatings: "",&#13;
                              productPosition: ""&#13;
                          });&#13;
                      }&#13;
                      klevu.analyticsEvents.catclick(termOptions);&#13;
                  },&#13;
				  /**&#13;
                   * Function to get cat view term option object&#13;
                   * @param {*} dataObj &#13;
                   */&#13;
                  getSearchViewOptions: function (dataObj) {&#13;
                      var analyticsSearchOptions = {&#13;
                          klevu_term: "unknown",&#13;
                          klevu_totalResults: "unknown",&#13;
						  klevu_typeOfQuery: "unknown"&#13;
                      };&#13;
&#13;
                      if (!dataObj) {&#13;
                          return analyticsSearchOptions;&#13;
                      }&#13;
&#13;
                      if (dataObj.klevu_term) {&#13;
                          analyticsSearchOptions.klevu_term = dataObj.klevu_term;&#13;
                      }&#13;
&#13;
                      if (dataObj.klevu_totalResults) {&#13;
                          analyticsSearchOptions.klevu_totalResults = dataObj.klevu_totalResults;&#13;
                      }&#13;
&#13;
                      if (dataObj.klevu_typeOfQuery) {&#13;
                          analyticsSearchOptions.klevu_typeOfQuery = dataObj.klevu_typeOfQuery;&#13;
                      }&#13;
                      return analyticsSearchOptions;&#13;
                  },&#13;
&#13;
                  /**&#13;
                   * Function to send cat view analytics request&#13;
                   * @param {*} termOptions &#13;
                   */&#13;
                  sendSearchViewAnalyticsRequest: function (termOptions) {&#13;
                      if (!termOptions) {&#13;
                          termOptions = this.getSearchViewOptions({&#13;
                              klevu_term: "",&#13;
                              klevu_totalResults: "",&#13;
							  klevu_typeOfQuery: ""&#13;
                          });&#13;
                      }&#13;
                      klevu.analyticsEvents.term(termOptions);&#13;
                  },&#13;
				  /**&#13;
                   * Function to get cat product tracking click object&#13;
                   * @param {*} dataObj &#13;
                   */&#13;
                  getSearchProductClickTrackingOption: function (dataObj) {&#13;
                      var analyticsSearchClickOptions = {&#13;
                          klevu_keywords: "unknown",&#13;
                          klevu_type: "unknown",&#13;
                          klevu_productId: "unknown",&#13;
                          klevu_productName: "unknown",&#13;
                          klevu_productUrl: "unknown"&#13;
                      };&#13;
&#13;
                      if (!dataObj) {&#13;
                          return analyticsSearchClickOptions;&#13;
                      }&#13;
&#13;
                      if (dataObj.klevu_keywords) {&#13;
                          analyticsSearchClickOptions.klevu_keywords = dataObj.klevu_keywords;&#13;
                      }&#13;
&#13;
                      if (dataObj.klevu_type) {&#13;
                          analyticsSearchClickOptions.klevu_type = dataObj.klevu_type;&#13;
                      }&#13;
&#13;
                      if (dataObj.klevu_productId) {&#13;
                          analyticsSearchClickOptions.klevu_productId = dataObj.klevu_productId;&#13;
                      }&#13;
&#13;
                      if (dataObj.klevu_productName) {&#13;
                          analyticsSearchClickOptions.klevu_productName = dataObj.klevu_productName;&#13;
                      }&#13;
&#13;
                      if (dataObj.klevu_productUrl) {&#13;
                          analyticsSearchClickOptions.klevu_productSku = dataObj.klevu_productUrl;&#13;
                      }&#13;
&#13;
                      return analyticsSearchClickOptions;&#13;
                  },&#13;
&#13;
                  /**&#13;
                   * Function to send cat product click tracking analytics request&#13;
                   * @param {*} termOptions &#13;
                   */&#13;
                  sendSearchProductClickTrackingAnalyticsRequest: function (termOptions) {&#13;
                      if (!termOptions) {&#13;
                          termOptions = this.getSearchProductClickTrackingOption({&#13;
                              klevu_keywords: "",&#13;
                              klevu_type: "",&#13;
                              klevu_productId: "",&#13;
                              klevu_productName: "",&#13;
                              klevu_productUrl: ""&#13;
                          });&#13;
                      }&#13;
                      klevu.analyticsEvents.click(termOptions);&#13;
                  }&#13;
				  &#13;
				  &#13;
              },&#13;
              build: true&#13;
          }&#13;
      });&#13;
&#13;
&#13;
  /**&#13;
   * Analytics event for sfcc preserve layout&#13;
   */&#13;
  klevu.coreEvent.build({&#13;
      name: "analyticsPowerUpSFCCPL",&#13;
      fire: function () {&#13;
          if (&#13;
              !klevu.getSetting(klevu.settings, "settings.powerup.analytics", false) ||&#13;
              !klevu.analytics ||&#13;
              !klevu.analytics.build ||&#13;
			  !klevu.analyticsUtilSFCC ||&#13;
              !klevu.analyticsUtilSFCC.build&#13;
          ) {&#13;
              return false;&#13;
          }&#13;
          return true;&#13;
      },&#13;
      maxCount: 500,&#13;
      delay: 100&#13;
  });&#13;
  klevu.coreEvent.attach("analyticsPowerUpSFCCPL", {&#13;
		name: "attachKlevuPowerupAnalytics",&#13;
		fire: function () {&#13;
			// init the klevu_page_meta&#13;
			if(!(typeof klevu_page_meta == "undefined")){&#13;
			 if(klevu_page_meta.pageType == "category"){&#13;
				if (typeof klevuSendCategoryData == 'function') { &#13;
				  klevuSendCategoryData(); &#13;
				}&#13;
			 } else if(klevu_page_meta.pageType == "pdp"){&#13;
				if (typeof klevuSendProductData == 'function') { &#13;
				  klevuSendProductData(); &#13;
				}&#13;
			 } else if(klevu_page_meta.pageType == "search"){&#13;
				if (typeof klevuSendSearchData == 'function') { &#13;
				  klevuSendSearchData(); &#13;
				}&#13;
			 } &#13;
}&#13;
		}&#13;
    });&#13;
	&#13;
  var options = {&#13;
	  powerup: {analytics:true},&#13;
powerUp:{recsModule: true}&#13;
  };&#13;
&#13;
  klevu(options);&#13;
}&#13;
klevu.interactive(function () {&#13;
	if (typeof klevuGetPageData == 'function') { &#13;
	  klevuGetPageData(); &#13;
	}&#13;
	if (typeof klevuSFCCInit == 'function') { &#13;
	  klevuSFCCInit(); &#13;
	}&#13;
});&#13;
&lt;/script&gt;</custom-attribute>
        </custom-attributes>
    </content>

    <content content-id="klevu-quick-search-css">
        <display-name xml:lang="x-default">Quick Search Box Implementation: CSS</display-name>
        <online-flag>true</online-flag>
        <searchable-flag>false</searchable-flag>
        <page-attributes/>
    </content>

    <content content-id="klevu-quick-search-js">
        <display-name xml:lang="x-default">Quick Search Box Implementation: JS</display-name>
        <online-flag>true</online-flag>
        <searchable-flag>false</searchable-flag>
        <page-attributes/>
        <custom-attributes>
            <custom-attribute attribute-id="body" xml:lang="x-default">&lt;script src="https://js.klevu.com/core/v2/klevu.js"&gt;&lt;/script&gt;&#13;
&#13;
&lt;script&gt;&#13;
var kmcData = "https://js.klevu.com/klevu-js-v1/klevu-js-api/"&#13;
&#13;
function startup(klevu) {&#13;
    var klevuAPIKeys = $include(Klevu-GetAPIKeys)$;&#13;
    var klevuURL = $include(Klevu-GetSearchURL)$;&#13;
    var klevuSearchURL = klevuURL.searchURL;&#13;
    var options = {&#13;
            url: {&#13;
                search: klevuSearchURL,&#13;
                landing: '$url(Search-Show)$',&#13;
                protocol: 'https:',&#13;
                protocolFull: "https://",&#13;
                analytics: "https://stats.klevu.com/analytics/",&#13;
                analyticsCat: "https://stats.ksearchnet.com/analytics/",&#13;
                kmcData: kmcData&#13;
            },&#13;
            localSettings: true,&#13;
        search: {&#13;
            apiKey: klevuAPIKeys.apiKey,&#13;
            minChars: 0,&#13;
            placeholder: "Search",&#13;
            searchBoxSelector: ".klevu-search-field",&#13;
            searchBoxTarget: false&#13;
        },&#13;
        analytics: {&#13;
            apiKey: klevuAPIKeys.apiKey&#13;
        }&#13;
};&#13;
klevu(options);&#13;
};&#13;
klevu.interactive(function () {&#13;
    startup(klevu);&#13;
});&#13;
&lt;/script&gt;&#13;
&#13;
&lt;script src="https://js.klevu.com/theme/default/v2/quick-search-theme.js"&gt;&lt;/script&gt;</custom-attribute>
        </custom-attributes>
    </content>

    <content content-id="klevu-quick-search-templates">
        <display-name xml:lang="x-default">Quick Search Box Implementation: Templates</display-name>
        <online-flag>true</online-flag>
        <searchable-flag>false</searchable-flag>
        <page-attributes/>
    </content>
</library>
